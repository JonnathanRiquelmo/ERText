/*
 * generated by Xtext 2.25.0
 */
parser grammar InternalErDslParser;

options {
	tokenVocab=InternalErDslLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package org.xtext.unipampa.erdsl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.unipampa.erdsl.services.ErDslGrammarAccess;

}
@members {
	private ErDslGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("Is", "'is'");
		tokenNameToValue.put("All", "'All'");
		tokenNameToValue.put("Int", "'int'");
		tokenNameToValue.put("File", "'file'");
		tokenNameToValue.put("LeftParenthesisDigitZeroColonDigitOneRightParenthesis", "'(0:1)'");
		tokenNameToValue.put("N", "'(0:N)'");
		tokenNameToValue.put("LeftParenthesisDigitOneColonDigitOneRightParenthesis", "'(1:1)'");
		tokenNameToValue.put("N_1", "'(1:N)'");
		tokenNameToValue.put("MySQL", "'MySQL'");
		tokenNameToValue.put("Money", "'money'");
		tokenNameToValue.put("Domain", "'Domain'");
		tokenNameToValue.put("Double", "'double'");
		tokenNameToValue.put("String", "'string'");
		tokenNameToValue.put("Diagram", "'Diagram'");
		tokenNameToValue.put("Boolean", "'boolean'");
		tokenNameToValue.put("Relates", "'relates'");
		tokenNameToValue.put("Entities", "'Entities'");
		tokenNameToValue.put("Generate", "'Generate'");
		tokenNameToValue.put("Datetime", "'datetime'");
		tokenNameToValue.put("PostgreSQL", "'PostgreSQL'");
		tokenNameToValue.put("IsIdentifier", "'isIdentifier'");
		tokenNameToValue.put("LogicalSchema", "'LogicalSchema'");
		tokenNameToValue.put("Relationships", "'Relationships'");
		tokenNameToValue.put("TotalDisjoint", "'total/disjoint'");
		tokenNameToValue.put("PartialDisjoint", "'partial/disjoint'");
		tokenNameToValue.put("TotalOverlapped", "'total/overlapped'");
		tokenNameToValue.put("PartialOverlapped", "'partial/overlapped'");
		tokenNameToValue.put("GenerateOcurrenceDiagram", "'@generateOcurrenceDiagram'");
	}

	public void setGrammarAccess(ErDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleERModel
entryRuleERModel
:
{ before(grammarAccess.getERModelRule()); }
	 ruleERModel
{ after(grammarAccess.getERModelRule()); } 
	 EOF 
;

// Rule ERModel
ruleERModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getERModelAccess().getGroup()); }
		(rule__ERModel__Group__0)
		{ after(grammarAccess.getERModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomain
entryRuleDomain
:
{ before(grammarAccess.getDomainRule()); }
	 ruleDomain
{ after(grammarAccess.getDomainRule()); } 
	 EOF 
;

// Rule Domain
ruleDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainAccess().getGroup()); }
		(rule__Domain__Group__0)
		{ after(grammarAccess.getDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationSideRight
entryRuleRelationSideRight
:
{ before(grammarAccess.getRelationSideRightRule()); }
	 ruleRelationSideRight
{ after(grammarAccess.getRelationSideRightRule()); } 
	 EOF 
;

// Rule RelationSideRight
ruleRelationSideRight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationSideRightAccess().getAlternatives()); }
		(rule__RelationSideRight__Alternatives)
		{ after(grammarAccess.getRelationSideRightAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationSideLeft
entryRuleRelationSideLeft
:
{ before(grammarAccess.getRelationSideLeftRule()); }
	 ruleRelationSideLeft
{ after(grammarAccess.getRelationSideLeftRule()); } 
	 EOF 
;

// Rule RelationSideLeft
ruleRelationSideLeft 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationSideLeftAccess().getAlternatives()); }
		(rule__RelationSideLeft__Alternatives)
		{ after(grammarAccess.getRelationSideLeftAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DataType
ruleDataType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__TargetGeneratorAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getERModelAccess().getTargetGeneratorLogicalSchemaKeyword_0_1_0_0()); }
		LogicalSchema
		{ after(grammarAccess.getERModelAccess().getTargetGeneratorLogicalSchemaKeyword_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getERModelAccess().getTargetGeneratorPostgreSQLKeyword_0_1_0_1()); }
		PostgreSQL
		{ after(grammarAccess.getERModelAccess().getTargetGeneratorPostgreSQLKeyword_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getERModelAccess().getTargetGeneratorMySQLKeyword_0_1_0_2()); }
		MySQL
		{ after(grammarAccess.getERModelAccess().getTargetGeneratorMySQLKeyword_0_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getERModelAccess().getTargetGeneratorDiagramKeyword_0_1_0_3()); }
		Diagram
		{ after(grammarAccess.getERModelAccess().getTargetGeneratorDiagramKeyword_0_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getERModelAccess().getTargetGeneratorAllKeyword_0_1_0_4()); }
		All
		{ after(grammarAccess.getERModelAccess().getTargetGeneratorAllKeyword_0_1_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__GeneralizationAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getGeneralizationTotalDisjointKeyword_1_1_0_0()); }
		TotalDisjoint
		{ after(grammarAccess.getEntityAccess().getGeneralizationTotalDisjointKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getGeneralizationTotalOverlappedKeyword_1_1_0_1()); }
		TotalOverlapped
		{ after(grammarAccess.getEntityAccess().getGeneralizationTotalOverlappedKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getGeneralizationPartialDisjointKeyword_1_1_0_2()); }
		PartialDisjoint
		{ after(grammarAccess.getEntityAccess().getGeneralizationPartialDisjointKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getGeneralizationPartialOverlappedKeyword_1_1_0_3()); }
		PartialOverlapped
		{ after(grammarAccess.getEntityAccess().getGeneralizationPartialOverlappedKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideRight__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSideRightAccess().getGroup_0()); }
		(rule__RelationSideRight__Group_0__0)
		{ after(grammarAccess.getRelationSideRightAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationSideRightAccess().getTargetAssignment_1()); }
		(rule__RelationSideRight__TargetAssignment_1)
		{ after(grammarAccess.getRelationSideRightAccess().getTargetAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideRight__CardinalityAlternatives_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSideRightAccess().getCardinality01Keyword_0_0_0_0()); }
		LeftParenthesisDigitZeroColonDigitOneRightParenthesis
		{ after(grammarAccess.getRelationSideRightAccess().getCardinality01Keyword_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationSideRightAccess().getCardinality11Keyword_0_0_0_1()); }
		LeftParenthesisDigitOneColonDigitOneRightParenthesis
		{ after(grammarAccess.getRelationSideRightAccess().getCardinality11Keyword_0_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationSideRightAccess().getCardinality0NKeyword_0_0_0_2()); }
		N
		{ after(grammarAccess.getRelationSideRightAccess().getCardinality0NKeyword_0_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationSideRightAccess().getCardinality1NKeyword_0_0_0_3()); }
		N_1
		{ after(grammarAccess.getRelationSideRightAccess().getCardinality1NKeyword_0_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideLeft__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSideLeftAccess().getTargetAssignment_0()); }
		(rule__RelationSideLeft__TargetAssignment_0)
		{ after(grammarAccess.getRelationSideLeftAccess().getTargetAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationSideLeftAccess().getGroup_1()); }
		(rule__RelationSideLeft__Group_1__0)
		{ after(grammarAccess.getRelationSideLeftAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideLeft__CardinalityAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSideLeftAccess().getCardinality01Keyword_1_1_0_0()); }
		LeftParenthesisDigitZeroColonDigitOneRightParenthesis
		{ after(grammarAccess.getRelationSideLeftAccess().getCardinality01Keyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationSideLeftAccess().getCardinality11Keyword_1_1_0_1()); }
		LeftParenthesisDigitOneColonDigitOneRightParenthesis
		{ after(grammarAccess.getRelationSideLeftAccess().getCardinality11Keyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationSideLeftAccess().getCardinality0NKeyword_1_1_0_2()); }
		N
		{ after(grammarAccess.getRelationSideLeftAccess().getCardinality0NKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationSideLeftAccess().getCardinality1NKeyword_1_1_0_3()); }
		N_1
		{ after(grammarAccess.getRelationSideLeftAccess().getCardinality1NKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_0()); }
		(Int)
		{ after(grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_1()); }
		(Double)
		{ after(grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getMONEYEnumLiteralDeclaration_2()); }
		(Money)
		{ after(grammarAccess.getDataTypeAccess().getMONEYEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_3()); }
		(String)
		{ after(grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_4()); }
		(Boolean)
		{ after(grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDATETIMEEnumLiteralDeclaration_5()); }
		(Datetime)
		{ after(grammarAccess.getDataTypeAccess().getDATETIMEEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getBLOBEnumLiteralDeclaration_6()); }
		(File)
		{ after(grammarAccess.getDataTypeAccess().getBLOBEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group__0__Impl
	rule__ERModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getGroup_0()); }
	(rule__ERModel__Group_0__0)?
	{ after(grammarAccess.getERModelAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group__1__Impl
	rule__ERModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getDomainAssignment_1()); }
	(rule__ERModel__DomainAssignment_1)
	{ after(grammarAccess.getERModelAccess().getDomainAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group__2__Impl
	rule__ERModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getERModelAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group__3__Impl
	rule__ERModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getGroup_3()); }
	(rule__ERModel__Group_3__0)
	{ after(grammarAccess.getERModelAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group__4__Impl
	rule__ERModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getERModelAccess().getEntitiesAssignment_4()); }
		(rule__ERModel__EntitiesAssignment_4)
		{ after(grammarAccess.getERModelAccess().getEntitiesAssignment_4()); }
	)
	(
		{ before(grammarAccess.getERModelAccess().getEntitiesAssignment_4()); }
		(rule__ERModel__EntitiesAssignment_4)*
		{ after(grammarAccess.getERModelAccess().getEntitiesAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group__5__Impl
	rule__ERModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getGroup_5()); }
	(rule__ERModel__Group_5__0)
	{ after(grammarAccess.getERModelAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group__6__Impl
	rule__ERModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getGroup_6()); }
	(rule__ERModel__Group_6__0)
	{ after(grammarAccess.getERModelAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group__7__Impl
	rule__ERModel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getRelationsAssignment_7()); }
	(rule__ERModel__RelationsAssignment_7)*
	{ after(grammarAccess.getERModelAccess().getRelationsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getGroup_8()); }
	(rule__ERModel__Group_8__0)
	{ after(grammarAccess.getERModelAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ERModel__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group_0__0__Impl
	rule__ERModel__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getGenerateKeyword_0_0()); }
	Generate
	{ after(grammarAccess.getERModelAccess().getGenerateKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group_0__1__Impl
	rule__ERModel__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getTargetGeneratorAssignment_0_1()); }
	(rule__ERModel__TargetGeneratorAssignment_0_1)
	{ after(grammarAccess.getERModelAccess().getTargetGeneratorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getSemicolonKeyword_0_2()); }
	Semicolon
	{ after(grammarAccess.getERModelAccess().getSemicolonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ERModel__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group_3__0__Impl
	rule__ERModel__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getEntitiesKeyword_3_0()); }
	Entities
	{ after(grammarAccess.getERModelAccess().getEntitiesKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getLeftCurlyBracketKeyword_3_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getERModelAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ERModel__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group_5__0__Impl
	rule__ERModel__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getRightCurlyBracketKeyword_5_0()); }
	RightCurlyBracket
	{ after(grammarAccess.getERModelAccess().getRightCurlyBracketKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getSemicolonKeyword_5_1()); }
	Semicolon
	{ after(grammarAccess.getERModelAccess().getSemicolonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ERModel__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group_6__0__Impl
	rule__ERModel__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getRelationshipsKeyword_6_0()); }
	Relationships
	{ after(grammarAccess.getERModelAccess().getRelationshipsKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getLeftCurlyBracketKeyword_6_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getERModelAccess().getLeftCurlyBracketKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ERModel__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group_8__0__Impl
	rule__ERModel__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getRightCurlyBracketKeyword_8_0()); }
	RightCurlyBracket
	{ after(grammarAccess.getERModelAccess().getRightCurlyBracketKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ERModel__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getERModelAccess().getSemicolonKeyword_8_1()); }
	Semicolon
	{ after(grammarAccess.getERModelAccess().getSemicolonKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__0__Impl
	rule__Domain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getDomainKeyword_0()); }
	Domain
	{ after(grammarAccess.getDomainAccess().getDomainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getNameAssignment_1()); }
	(rule__Domain__NameAssignment_1)
	{ after(grammarAccess.getDomainAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_1()); }
	(rule__Attribute__TypeAssignment_1)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getIsKeyAssignment_2()); }
	(rule__Attribute__IsKeyAssignment_2)?
	{ after(grammarAccess.getAttributeAccess().getIsKeyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_0()); }
	(rule__Entity__NameAssignment_0)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_1()); }
	(rule__Entity__Group_1__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2()); }
	(rule__Entity__Group_2__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_1__0__Impl
	rule__Entity__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getIsKeyword_1_0()); }
	Is
	{ after(grammarAccess.getEntityAccess().getIsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_1__1__Impl
	rule__Entity__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGeneralizationAssignment_1_1()); }
	(rule__Entity__GeneralizationAssignment_1_1)
	{ after(grammarAccess.getEntityAccess().getGeneralizationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getIsAssignment_1_2()); }
	(rule__Entity__IsAssignment_1_2)
	{ after(grammarAccess.getEntityAccess().getIsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2_0()); }
	LeftCurlyBracket
	{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__1__Impl
	rule__Entity__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getAttributesAssignment_2_1()); }
	(rule__Entity__AttributesAssignment_2_1)
	{ after(grammarAccess.getEntityAccess().getAttributesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__2__Impl
	rule__Entity__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2_2()); }
	(rule__Entity__Group_2_2__0)*
	{ after(grammarAccess.getEntityAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_2_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2_2__0__Impl
	rule__Entity__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getCommaKeyword_2_2_0()); }
	Comma
	{ after(grammarAccess.getEntityAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getAttributesAssignment_2_2_1()); }
	(rule__Entity__AttributesAssignment_2_2_1)
	{ after(grammarAccess.getEntityAccess().getAttributesAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getNameAssignment_0()); }
	(rule__Relation__NameAssignment_0)
	{ after(grammarAccess.getRelationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getGroup_1()); }
	(rule__Relation__Group_1__0)
	{ after(grammarAccess.getRelationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__2__Impl
	rule__Relation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getGroup_2()); }
	(rule__Relation__Group_2__0)*
	{ after(grammarAccess.getRelationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getOcurrenceAssignment_3()); }
	(rule__Relation__OcurrenceAssignment_3)?
	{ after(grammarAccess.getRelationAccess().getOcurrenceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__0__Impl
	rule__Relation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getLeftSquareBracketKeyword_1_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getRelationAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__1__Impl
	rule__Relation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getLeftEndingAssignment_1_1()); }
	(rule__Relation__LeftEndingAssignment_1_1)
	{ after(grammarAccess.getRelationAccess().getLeftEndingAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__2__Impl
	rule__Relation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelatesKeyword_1_2()); }
	Relates
	{ after(grammarAccess.getRelationAccess().getRelatesKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__3__Impl
	rule__Relation__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRightEndingAssignment_1_3()); }
	(rule__Relation__RightEndingAssignment_1_3)
	{ after(grammarAccess.getRelationAccess().getRightEndingAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRightSquareBracketKeyword_1_4()); }
	RightSquareBracket
	{ after(grammarAccess.getRelationAccess().getRightSquareBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_2__0__Impl
	rule__Relation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_2_0()); }
	LeftCurlyBracket
	{ after(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_2__1__Impl
	rule__Relation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getAttributesAssignment_2_1()); }
	(rule__Relation__AttributesAssignment_2_1)
	{ after(grammarAccess.getRelationAccess().getAttributesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_2__2__Impl
	rule__Relation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getGroup_2_2()); }
	(rule__Relation__Group_2_2__0)*
	{ after(grammarAccess.getRelationAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_2_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_2_2__0__Impl
	rule__Relation__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getCommaKeyword_2_2_0()); }
	Comma
	{ after(grammarAccess.getRelationAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getAttributesAssignment_2_2_1()); }
	(rule__Relation__AttributesAssignment_2_2_1)
	{ after(grammarAccess.getRelationAccess().getAttributesAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationSideRight__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationSideRight__Group_0__0__Impl
	rule__RelationSideRight__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideRight__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationSideRightAccess().getCardinalityAssignment_0_0()); }
	(rule__RelationSideRight__CardinalityAssignment_0_0)
	{ after(grammarAccess.getRelationSideRightAccess().getCardinalityAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideRight__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationSideRight__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideRight__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationSideRightAccess().getTargetAssignment_0_1()); }
	(rule__RelationSideRight__TargetAssignment_0_1)
	{ after(grammarAccess.getRelationSideRightAccess().getTargetAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationSideLeft__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationSideLeft__Group_1__0__Impl
	rule__RelationSideLeft__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideLeft__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationSideLeftAccess().getTargetAssignment_1_0()); }
	(rule__RelationSideLeft__TargetAssignment_1_0)
	{ after(grammarAccess.getRelationSideLeftAccess().getTargetAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideLeft__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationSideLeft__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideLeft__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationSideLeftAccess().getCardinalityAssignment_1_1()); }
	(rule__RelationSideLeft__CardinalityAssignment_1_1)
	{ after(grammarAccess.getRelationSideLeftAccess().getCardinalityAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ERModel__TargetGeneratorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getERModelAccess().getTargetGeneratorAlternatives_0_1_0()); }
		(rule__ERModel__TargetGeneratorAlternatives_0_1_0)
		{ after(grammarAccess.getERModelAccess().getTargetGeneratorAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__DomainAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getERModelAccess().getDomainDomainParserRuleCall_1_0()); }
		ruleDomain
		{ after(grammarAccess.getERModelAccess().getDomainDomainParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__EntitiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getERModelAccess().getEntitiesEntityParserRuleCall_4_0()); }
		ruleEntity
		{ after(grammarAccess.getERModelAccess().getEntitiesEntityParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ERModel__RelationsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getERModelAccess().getRelationsRelationParserRuleCall_7_0()); }
		ruleRelation
		{ after(grammarAccess.getERModelAccess().getRelationsRelationParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeDataTypeEnumRuleCall_1_0()); }
		ruleDataType
		{ after(grammarAccess.getAttributeAccess().getTypeDataTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__IsKeyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getIsKeyIsIdentifierKeyword_2_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getIsKeyIsIdentifierKeyword_2_0()); }
			IsIdentifier
			{ after(grammarAccess.getAttributeAccess().getIsKeyIsIdentifierKeyword_2_0()); }
		)
		{ after(grammarAccess.getAttributeAccess().getIsKeyIsIdentifierKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__GeneralizationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getGeneralizationAlternatives_1_1_0()); }
		(rule__Entity__GeneralizationAlternatives_1_1_0)
		{ after(grammarAccess.getEntityAccess().getGeneralizationAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__IsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getIsEntityCrossReference_1_2_0()); }
		(
			{ before(grammarAccess.getEntityAccess().getIsEntityIDTerminalRuleCall_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEntityAccess().getIsEntityIDTerminalRuleCall_1_2_0_1()); }
		)
		{ after(grammarAccess.getEntityAccess().getIsEntityCrossReference_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttributesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_2_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttributesAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_2_2_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getRelationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__LeftEndingAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getLeftEndingRelationSideLeftParserRuleCall_1_1_0()); }
		ruleRelationSideLeft
		{ after(grammarAccess.getRelationAccess().getLeftEndingRelationSideLeftParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RightEndingAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getRightEndingRelationSideRightParserRuleCall_1_3_0()); }
		ruleRelationSideRight
		{ after(grammarAccess.getRelationAccess().getRightEndingRelationSideRightParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__AttributesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getAttributesAttributeParserRuleCall_2_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getRelationAccess().getAttributesAttributeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__AttributesAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getAttributesAttributeParserRuleCall_2_2_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getRelationAccess().getAttributesAttributeParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__OcurrenceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getOcurrenceGenerateOcurrenceDiagramKeyword_3_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getOcurrenceGenerateOcurrenceDiagramKeyword_3_0()); }
			GenerateOcurrenceDiagram
			{ after(grammarAccess.getRelationAccess().getOcurrenceGenerateOcurrenceDiagramKeyword_3_0()); }
		)
		{ after(grammarAccess.getRelationAccess().getOcurrenceGenerateOcurrenceDiagramKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideRight__CardinalityAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSideRightAccess().getCardinalityAlternatives_0_0_0()); }
		(rule__RelationSideRight__CardinalityAlternatives_0_0_0)
		{ after(grammarAccess.getRelationSideRightAccess().getCardinalityAlternatives_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideRight__TargetAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSideRightAccess().getTargetEntityCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getRelationSideRightAccess().getTargetEntityIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationSideRightAccess().getTargetEntityIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getRelationSideRightAccess().getTargetEntityCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideRight__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSideRightAccess().getTargetRelationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRelationSideRightAccess().getTargetRelationIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationSideRightAccess().getTargetRelationIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRelationSideRightAccess().getTargetRelationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideLeft__TargetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSideLeftAccess().getTargetEntityCrossReference_0_0()); }
		(
			{ before(grammarAccess.getRelationSideLeftAccess().getTargetEntityIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationSideLeftAccess().getTargetEntityIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getRelationSideLeftAccess().getTargetEntityCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideLeft__TargetAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSideLeftAccess().getTargetRelationCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getRelationSideLeftAccess().getTargetRelationIDTerminalRuleCall_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationSideLeftAccess().getTargetRelationIDTerminalRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getRelationSideLeftAccess().getTargetRelationCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSideLeft__CardinalityAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSideLeftAccess().getCardinalityAlternatives_1_1_0()); }
		(rule__RelationSideLeft__CardinalityAlternatives_1_1_0)
		{ after(grammarAccess.getRelationSideLeftAccess().getCardinalityAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
