/*
 * generated by Xtext 2.17.0
 */
package org.xtext.unipampa.erdsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.unipampa.erdsl.erDsl.ERModel

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class ErDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		
		val modeloER = resource.contents.get(0) as ERModel
		
		fsa.generateFile('LogicalSchema_' + modeloER.domain.name + '.html', CreateLogical(modeloER))
		
		fsa.generateFile('PostgreSQL_' + modeloER.domain.name + '.sql', CreatePostgreSQL(modeloER))
		
		fsa.generateFile('MySQL_' + modeloER.domain.name + '.sql', CreateMySQL(modeloER))
	}
	
	
	
	/**
	 * LOGICAL SCHEMA (HTML) GENERATOR CODE
	 */
	private def CreateLogical(ERModel e) '''
	«FOR entity : e.entities SEPARATOR ")</br></br>" AFTER ")</br>"»
		TBL «entity.name» («FOR attribute : entity.attributes SEPARATOR ", "»«attribute.name»«ENDFOR»
	«ENDFOR»
	'''
	
	
	
	/**
	 * PHYSICAL SCHEMA (PostgreSQL) GENERATOR CODE
	 */
	private def CreatePostgreSQL(ERModel e) '''
	-- Database: «e.domain.name.toUpperCase»	
	-- DROP DATABASE «e.domain.name.toUpperCase»;
	
	CREATE DATABASE «e.domain.name.toUpperCase»
	    WITH 
	    OWNER = postgres
	    ENCODING = 'UTF8'
	    TABLESPACE = pg_default
	    CONNECTION LIMIT = -1;
	    
	«FOR entity : e.entities SEPARATOR "\n);\n" AFTER ");\n"»
			-- Table: «entity.name.toUpperCase»
			-- DROP TABLE «entity.name.toUpperCase»;
			
			CREATE TABLE IF NOT EXISTS «entity.name.toUpperCase»
			(«FOR attribute : entity.attributes SEPARATOR ", "»
			      «attribute.name» «IF attribute.type.toString.equalsIgnoreCase("string")» VARCHAR (50)«ELSEIF true» «attribute.type»«ENDIF»
			«ENDFOR»
		«ENDFOR»
	'''
	
	/**
	 * PHYSICAL SCHEMA (MySQL) GENERATOR CODE
	 */
	private def CreateMySQL(ERModel e) '''
	/* TODO code */
	'''
	

}
