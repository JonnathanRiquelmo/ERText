/**
 * generated by Xtext 2.25.0
 */
package org.xtext.unipampa.erdsl.ui.wizard;

import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.ui.wizard.template.AbstractFileTemplate;
import org.eclipse.xtext.ui.wizard.template.FileTemplate;
import org.eclipse.xtext.ui.wizard.template.IFileGenerator;
import org.eclipse.xtext.ui.wizard.template.StringSelectionTemplateVariable;

@FileTemplate(label = "ERDSL Template", icon = "file_template.png", description = "Create a template file for ERDSl.")
@SuppressWarnings("all")
public final class ERtextFile extends AbstractFileTemplate {
  private final StringSelectionTemplateVariable modelName = this.combo("Template:", new String[] { "Hospital_Veterinario", "Empresa_Generica" }, "The logical example model");
  
  @Override
  public void generateFiles(final IFileGenerator generator) {
    StringConcatenation _builder = new StringConcatenation();
    String _folder = this.getFolder();
    _builder.append(_folder);
    _builder.append("/");
    String _name = this.getName();
    _builder.append(_name);
    _builder.append(".erdsl");
    StringConcatenation _builder_1 = new StringConcatenation();
    {
      boolean _equalsIgnoreCase = this.modelName.toString().equalsIgnoreCase("Hospital_Veterinario");
      if (_equalsIgnoreCase) {
        _builder_1.append("/*");
        _builder_1.newLine();
        _builder_1.append("* This is an example model");
        _builder_1.newLine();
        _builder_1.append("*/");
        _builder_1.newLine();
        _builder_1.append(" ");
        _builder_1.newLine();
        _builder_1.append("Generate All;");
        _builder_1.newLine();
        _builder_1.newLine();
        _builder_1.append("Domain Hospital_Veterinario;");
        _builder_1.newLine();
        _builder_1.newLine();
        _builder_1.append("Entities {");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("Pessoa {");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("idPessoa int isIdentifier,");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("telefoneS int, ");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("nome string");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("}");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("Veterinario is total/disjoint Pessoa {");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("nrVet int,");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("dtAdmissao datetime,");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("salario money");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("}");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("Cliente is total/disjoint Pessoa {");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("cpf int, ");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("email string");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("}");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("Animal {");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("idAnimal int isIdentifier,");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("idade int, ");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("porte string,");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("nome string");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("}");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("Enfermidade {");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("idEnfermidade int isIdentifier,");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("nome string,");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("descricao string");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("}");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("Tratamento {");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("idTratamento int isIdentifier,");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("dtInicio datetime,");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("dtFim datetime");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("}");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("Receita {");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("idReceita int isIdentifier,");
        _builder_1.newLine();
        _builder_1.append("\t\t");
        _builder_1.append("remedio string");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("}");
        _builder_1.newLine();
        _builder_1.append("\t ");
        _builder_1.newLine();
        _builder_1.append("};");
        _builder_1.newLine();
        _builder_1.newLine();
        _builder_1.append("Relationships {");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("Assistente   [Veterinario (0:1) relates (0:N) Veterinario]");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("Dono \t   \t [Cliente (1:1) relates (1:N) Animal]\t\t");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("Reponsavel   [Veterinario (1:N) relates (0:N) Tratamento]");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("Possui \t     [Tratamento (1:1) relates (1:1) Receita]");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("AnimalDoente [Animal (0:N) relates (1:N) Enfermidade]");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("TratAnimal   [AnimalDoente (1:N) relates (1:1) Tratamento]");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.newLine();
        _builder_1.append("};");
        _builder_1.newLine();
        _builder_1.newLine();
      } else {
        boolean _equalsIgnoreCase_1 = this.modelName.toString().equalsIgnoreCase("Empresa_Generica");
        if (_equalsIgnoreCase_1) {
          _builder_1.append("/*");
          _builder_1.newLine();
          _builder_1.append("* This is an example model");
          _builder_1.newLine();
          _builder_1.append("*/");
          _builder_1.newLine();
          _builder_1.newLine();
          _builder_1.append("Generate All;");
          _builder_1.newLine();
          _builder_1.newLine();
          _builder_1.append("Domain Empresa_Generica;");
          _builder_1.newLine();
          _builder_1.newLine();
          _builder_1.append("Entities {");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Empregado {");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("idEmpregado int isIdentifier,");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("salario money\t");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("}");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Contador is total/disjoint Empregado {");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("crc int");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("}");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Motorista is total/disjoint Empregado {");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("cnh int, ");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("veiculo string");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("}");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Engenheiro is total/disjoint Empregado {");
          _builder_1.newLine();
          _builder_1.append("\t\t\t");
          _builder_1.append("crea int, ");
          _builder_1.newLine();
          _builder_1.append("\t\t\t");
          _builder_1.append("areaAtuacao string");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("}");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Departamento {");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("idDept int isIdentifier,");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("sigla string");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("}");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Tipo {");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("idTipo int isIdentifier,");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("descricao string");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("}");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Projeto\t{");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("idProjeto int isIdentifier,");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("descricao string");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("}");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Materiais {");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("idMaterial int isIdentifier,");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("descricao string,");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("validade string");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("}");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Fornecedor {");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("idFornecedor int isIdentifier,");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("cnpj int, ");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("nomeFantasia string,");
          _builder_1.newLine();
          _builder_1.append("\t\t");
          _builder_1.append("telefone int");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("}");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.newLine();
          _builder_1.append("};");
          _builder_1.newLine();
          _builder_1.newLine();
          _builder_1.append("Relationships {");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Supervisiona [Empregado (0:1) relates (1:N) Empregado]");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Desenvolve \t [Empregado (1:N) relates (0:N) Projeto]");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Lotado \t\t [Empregado (1:N) relates (0:1) Departamento]");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Tem \t\t [Departamento (1:1) relates (1:1) Tipo]");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Controla\t [Departamento (1:N) relates (0:N) Projeto]");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("Fornecimento [Materiais (0:N) relates (1:N) Fornecedor]");
          _builder_1.newLine();
          _builder_1.append("\t");
          _builder_1.append("ProjFornec\t [Projeto (1:N) relates (1:N) Fornecimento] ");
          _builder_1.newLine();
          _builder_1.append("};");
          _builder_1.newLine();
          _builder_1.newLine();
        }
      }
    }
    generator.generate(_builder, _builder_1);
  }
}
