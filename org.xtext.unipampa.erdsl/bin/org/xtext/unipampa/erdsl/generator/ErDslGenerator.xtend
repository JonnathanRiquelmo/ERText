/*
 * generated by Xtext 2.17.0
 */
package org.xtext.unipampa.erdsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.unipampa.erdsl.erDsl.ERModel

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class ErDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
val modeloER = resource.contents.get(0) as ERModel
		fsa.generateFile('LogicalSchema.txt', 
			'''
			DATABASE «modeloER.domain.name»
			«FOR entity : modeloER.entities SEPARATOR ','»
			
			TABLE «entity.name»«FOR parent : entity.isA»«IF entity.isA !== null» is a «ENDIF»«parent.name»«ENDFOR»
				«FOR attribute : entity.attributes SEPARATOR ','»
					«attribute.name» «attribute.type» «IF attribute.isIsKey»is a key«ENDIF»
				«ENDFOR»
			«ENDFOR»
							
			#################
			### Relations ###
			#################
			
				«FOR relation : modeloER.relations»
					«relation.name» 
					(«relation.leftEnding.minimalCardinality» , «relation.leftEnding.maximumCardinality») «relation.leftEnding.target.eClass.name» relates «relation.rightEnding.target.eClass.name» («relation.leftEnding.minimalCardinality» ', «relation.leftEnding.maximumCardinality»)
					
					«relation.leftEnding.target»
					«relation.rightEnding.target»	
											
				«ENDFOR»
			'''
		)
		
	}
}
