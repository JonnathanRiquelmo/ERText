/*
 * generated by Xtext 2.25.0
 */
parser grammar InternalErDslParser;

options {
	tokenVocab=InternalErDslLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package org.xtext.unipampa.erdsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.unipampa.erdsl.services.ErDslGrammarAccess;

}

@members {

 	private ErDslGrammarAccess grammarAccess;

    public InternalErDslParser(TokenStream input, ErDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ERModel";
   	}

   	@Override
   	protected ErDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleERModel
entryRuleERModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getERModelRule()); }
	iv_ruleERModel=ruleERModel
	{ $current=$iv_ruleERModel.current; }
	EOF;

// Rule ERModel
ruleERModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Generate
			{
				newLeafNode(otherlv_0, grammarAccess.getERModelAccess().getGenerateKeyword_0_0());
			}
			(
				(
					(
						lv_targetGenerator_1_1=LogicalSchema
						{
							newLeafNode(lv_targetGenerator_1_1, grammarAccess.getERModelAccess().getTargetGeneratorLogicalSchemaKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getERModelRule());
							}
							setWithLastConsumed($current, "targetGenerator", lv_targetGenerator_1_1, null);
						}
						    |
						lv_targetGenerator_1_2=PostgreSQL
						{
							newLeafNode(lv_targetGenerator_1_2, grammarAccess.getERModelAccess().getTargetGeneratorPostgreSQLKeyword_0_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getERModelRule());
							}
							setWithLastConsumed($current, "targetGenerator", lv_targetGenerator_1_2, null);
						}
						    |
						lv_targetGenerator_1_3=MySQL
						{
							newLeafNode(lv_targetGenerator_1_3, grammarAccess.getERModelAccess().getTargetGeneratorMySQLKeyword_0_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getERModelRule());
							}
							setWithLastConsumed($current, "targetGenerator", lv_targetGenerator_1_3, null);
						}
						    |
						lv_targetGenerator_1_4=All
						{
							newLeafNode(lv_targetGenerator_1_4, grammarAccess.getERModelAccess().getTargetGeneratorAllKeyword_0_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getERModelRule());
							}
							setWithLastConsumed($current, "targetGenerator", lv_targetGenerator_1_4, null);
						}
					)
				)
			)
			otherlv_2=Semicolon
			{
				newLeafNode(otherlv_2, grammarAccess.getERModelAccess().getSemicolonKeyword_0_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getERModelAccess().getDomainDomainParserRuleCall_1_0());
				}
				lv_domain_3_0=ruleDomain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getERModelRule());
					}
					set(
						$current,
						"domain",
						lv_domain_3_0,
						"org.xtext.unipampa.erdsl.ErDsl.Domain");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=Semicolon
		{
			newLeafNode(otherlv_4, grammarAccess.getERModelAccess().getSemicolonKeyword_2());
		}
		(
			otherlv_5=Entities
			{
				newLeafNode(otherlv_5, grammarAccess.getERModelAccess().getEntitiesKeyword_3_0());
			}
			otherlv_6=LeftCurlyBracket
			{
				newLeafNode(otherlv_6, grammarAccess.getERModelAccess().getLeftCurlyBracketKeyword_3_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getERModelAccess().getEntitiesEntityParserRuleCall_4_0());
				}
				lv_entities_7_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getERModelRule());
					}
					add(
						$current,
						"entities",
						lv_entities_7_0,
						"org.xtext.unipampa.erdsl.ErDsl.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			otherlv_8=RightCurlyBracket
			{
				newLeafNode(otherlv_8, grammarAccess.getERModelAccess().getRightCurlyBracketKeyword_5_0());
			}
			otherlv_9=Semicolon
			{
				newLeafNode(otherlv_9, grammarAccess.getERModelAccess().getSemicolonKeyword_5_1());
			}
		)
		(
			otherlv_10=Relationships
			{
				newLeafNode(otherlv_10, grammarAccess.getERModelAccess().getRelationshipsKeyword_6_0());
			}
			otherlv_11=LeftCurlyBracket
			{
				newLeafNode(otherlv_11, grammarAccess.getERModelAccess().getLeftCurlyBracketKeyword_6_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getERModelAccess().getRelationsRelationParserRuleCall_7_0());
				}
				lv_relations_12_0=ruleRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getERModelRule());
					}
					add(
						$current,
						"relations",
						lv_relations_12_0,
						"org.xtext.unipampa.erdsl.ErDsl.Relation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_13=RightCurlyBracket
			{
				newLeafNode(otherlv_13, grammarAccess.getERModelAccess().getRightCurlyBracketKeyword_8_0());
			}
			otherlv_14=Semicolon
			{
				newLeafNode(otherlv_14, grammarAccess.getERModelAccess().getSemicolonKeyword_8_1());
			}
		)
	)
;

// Entry rule entryRuleDomain
entryRuleDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainRule()); }
	iv_ruleDomain=ruleDomain
	{ $current=$iv_ruleDomain.current; }
	EOF;

// Rule Domain
ruleDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Domain
		{
			newLeafNode(otherlv_0, grammarAccess.getDomainAccess().getDomainKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeDataTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.unipampa.erdsl.ErDsl.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_isKey_2_0=IsIdentifier
				{
					newLeafNode(lv_isKey_2_0, grammarAccess.getAttributeAccess().getIsKeyIsIdentifierKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "isKey", lv_isKey_2_0 != null, "isIdentifier");
				}
			)
		)?
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1=Is
			{
				newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getIsKeyword_1_0());
			}
			(
				(
					(
						lv_generalization_2_1=TotalDisjoint
						{
							newLeafNode(lv_generalization_2_1, grammarAccess.getEntityAccess().getGeneralizationTotalDisjointKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEntityRule());
							}
							setWithLastConsumed($current, "generalization", lv_generalization_2_1, null);
						}
						    |
						lv_generalization_2_2=TotalOverlapped
						{
							newLeafNode(lv_generalization_2_2, grammarAccess.getEntityAccess().getGeneralizationTotalOverlappedKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEntityRule());
							}
							setWithLastConsumed($current, "generalization", lv_generalization_2_2, null);
						}
						    |
						lv_generalization_2_3=PartialDisjoint
						{
							newLeafNode(lv_generalization_2_3, grammarAccess.getEntityAccess().getGeneralizationPartialDisjointKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEntityRule());
							}
							setWithLastConsumed($current, "generalization", lv_generalization_2_3, null);
						}
						    |
						lv_generalization_2_4=PartialOverlapped
						{
							newLeafNode(lv_generalization_2_4, grammarAccess.getEntityAccess().getGeneralizationPartialOverlappedKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEntityRule());
							}
							setWithLastConsumed($current, "generalization", lv_generalization_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getIsEntityCrossReference_1_2_0());
					}
				)
			)
		)?
		(
			otherlv_4=LeftCurlyBracket
			{
				newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_2_1_0());
					}
					lv_attributes_5_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_5_0,
							"org.xtext.unipampa.erdsl.ErDsl.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=Comma
				{
					newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_2_2_1_0());
						}
						lv_attributes_7_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntityRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_7_0,
								"org.xtext.unipampa.erdsl.ErDsl.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=RightCurlyBracket
			{
				newLeafNode(otherlv_8, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	iv_ruleRelation=ruleRelation
	{ $current=$iv_ruleRelation.current; }
	EOF;

// Rule Relation
ruleRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRelationAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			otherlv_1=LeftSquareBracket
			{
				newLeafNode(otherlv_1, grammarAccess.getRelationAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationAccess().getLeftEndingRelationSideLeftParserRuleCall_1_1_0());
					}
					lv_leftEnding_2_0=ruleRelationSideLeft
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationRule());
						}
						set(
							$current,
							"leftEnding",
							lv_leftEnding_2_0,
							"org.xtext.unipampa.erdsl.ErDsl.RelationSideLeft");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=Relates
			{
				newLeafNode(otherlv_3, grammarAccess.getRelationAccess().getRelatesKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationAccess().getRightEndingRelationSideRightParserRuleCall_1_3_0());
					}
					lv_rightEnding_4_0=ruleRelationSideRight
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationRule());
						}
						set(
							$current,
							"rightEnding",
							lv_rightEnding_4_0,
							"org.xtext.unipampa.erdsl.ErDsl.RelationSideRight");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=RightSquareBracket
			{
				newLeafNode(otherlv_5, grammarAccess.getRelationAccess().getRightSquareBracketKeyword_1_4());
			}
		)
		(
			otherlv_6=LeftCurlyBracket
			{
				newLeafNode(otherlv_6, grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationAccess().getAttributesAttributeParserRuleCall_2_1_0());
					}
					lv_attributes_7_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_7_0,
							"org.xtext.unipampa.erdsl.ErDsl.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=Comma
				{
					newLeafNode(otherlv_8, grammarAccess.getRelationAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRelationAccess().getAttributesAttributeParserRuleCall_2_2_1_0());
						}
						lv_attributes_9_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_9_0,
								"org.xtext.unipampa.erdsl.ErDsl.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=RightCurlyBracket
			{
				newLeafNode(otherlv_10, grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_2_3());
			}
		)*
	)
;

// Entry rule entryRuleRelationSideRight
entryRuleRelationSideRight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationSideRightRule()); }
	iv_ruleRelationSideRight=ruleRelationSideRight
	{ $current=$iv_ruleRelationSideRight.current; }
	EOF;

// Rule RelationSideRight
ruleRelationSideRight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_cardinality_0_1=LeftParenthesisDigitZeroColonDigitOneRightParenthesis
						{
							newLeafNode(lv_cardinality_0_1, grammarAccess.getRelationSideRightAccess().getCardinality01Keyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationSideRightRule());
							}
							setWithLastConsumed($current, "cardinality", lv_cardinality_0_1, null);
						}
						    |
						lv_cardinality_0_2=LeftParenthesisDigitOneColonDigitOneRightParenthesis
						{
							newLeafNode(lv_cardinality_0_2, grammarAccess.getRelationSideRightAccess().getCardinality11Keyword_0_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationSideRightRule());
							}
							setWithLastConsumed($current, "cardinality", lv_cardinality_0_2, null);
						}
						    |
						lv_cardinality_0_3=N
						{
							newLeafNode(lv_cardinality_0_3, grammarAccess.getRelationSideRightAccess().getCardinality0NKeyword_0_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationSideRightRule());
							}
							setWithLastConsumed($current, "cardinality", lv_cardinality_0_3, null);
						}
						    |
						lv_cardinality_0_4=N_1
						{
							newLeafNode(lv_cardinality_0_4, grammarAccess.getRelationSideRightAccess().getCardinality1NKeyword_0_0_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationSideRightRule());
							}
							setWithLastConsumed($current, "cardinality", lv_cardinality_0_4, null);
						}
					)
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationSideRightRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getRelationSideRightAccess().getTargetEntityCrossReference_0_1_0());
					}
				)
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationSideRightRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getRelationSideRightAccess().getTargetRelationCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleRelationSideLeft
entryRuleRelationSideLeft returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationSideLeftRule()); }
	iv_ruleRelationSideLeft=ruleRelationSideLeft
	{ $current=$iv_ruleRelationSideLeft.current; }
	EOF;

// Rule RelationSideLeft
ruleRelationSideLeft returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationSideLeftRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRelationSideLeftAccess().getTargetEntityCrossReference_0_0());
				}
			)
		)
		    |
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationSideLeftRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getRelationSideLeftAccess().getTargetRelationCrossReference_1_0_0());
					}
				)
			)
			(
				(
					(
						lv_cardinality_2_1=LeftParenthesisDigitZeroColonDigitOneRightParenthesis
						{
							newLeafNode(lv_cardinality_2_1, grammarAccess.getRelationSideLeftAccess().getCardinality01Keyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationSideLeftRule());
							}
							setWithLastConsumed($current, "cardinality", lv_cardinality_2_1, null);
						}
						    |
						lv_cardinality_2_2=LeftParenthesisDigitOneColonDigitOneRightParenthesis
						{
							newLeafNode(lv_cardinality_2_2, grammarAccess.getRelationSideLeftAccess().getCardinality11Keyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationSideLeftRule());
							}
							setWithLastConsumed($current, "cardinality", lv_cardinality_2_2, null);
						}
						    |
						lv_cardinality_2_3=N
						{
							newLeafNode(lv_cardinality_2_3, grammarAccess.getRelationSideLeftAccess().getCardinality0NKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationSideLeftRule());
							}
							setWithLastConsumed($current, "cardinality", lv_cardinality_2_3, null);
						}
						    |
						lv_cardinality_2_4=N_1
						{
							newLeafNode(lv_cardinality_2_4, grammarAccess.getRelationSideLeftAccess().getCardinality1NKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationSideLeftRule());
							}
							setWithLastConsumed($current, "cardinality", lv_cardinality_2_4, null);
						}
					)
				)
			)
		)
	)
;

// Rule DataType
ruleDataType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Int
			{
				$current = grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Double
			{
				$current = grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Money
			{
				$current = grammarAccess.getDataTypeAccess().getMONEYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataTypeAccess().getMONEYEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=String
			{
				$current = grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4=Boolean
			{
				$current = grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5=Datetime
			{
				$current = grammarAccess.getDataTypeAccess().getDATETIMEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDataTypeAccess().getDATETIMEEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6=File
			{
				$current = grammarAccess.getDataTypeAccess().getBLOBEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getDataTypeAccess().getBLOBEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7=Serial
			{
				$current = grammarAccess.getDataTypeAccess().getSERIALEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getDataTypeAccess().getSERIALEnumLiteralDeclaration_7());
			}
		)
	)
;
