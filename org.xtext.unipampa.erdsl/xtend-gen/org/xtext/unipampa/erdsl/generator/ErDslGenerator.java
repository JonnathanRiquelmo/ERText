/**
 * generated by Xtext 2.17.0
 */
package org.xtext.unipampa.erdsl.generator;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.StringExtensions;
import org.xtext.unipampa.erdsl.erDsl.ERModel;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class ErDslGenerator extends AbstractGenerator {
  private final HtmlFileGenerator htmlGenerator = new HtmlFileGenerator();
  
  private final PostgresqlFileGenerator postGreSqlGenerator = new PostgresqlFileGenerator();
  
  private final MysqlFileGenerator MySqlGenerator = new MysqlFileGenerator();
  
  private final PlantUmlFileGenerator PlantUmlGenerator = new PlantUmlFileGenerator();
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _get = resource.getContents().get(0);
    final ERModel modeloER = ((ERModel) _get);
    if (((!StringExtensions.isNullOrEmpty(modeloER.getTargetGenerator())) && (!modeloER.getTargetGenerator().equalsIgnoreCase("all")))) {
      String _string = modeloER.getTargetGenerator().toString();
      boolean _matched = false;
      boolean _equalsIgnoreCase = modeloER.getTargetGenerator().toString().equalsIgnoreCase("logicalschema");
      if (_equalsIgnoreCase) {
        _matched=true;
        this.htmlGenerator.doGenerate(resource, fsa, context);
      }
      if (!_matched) {
        boolean _equalsIgnoreCase_1 = modeloER.getTargetGenerator().toString().equalsIgnoreCase("postgresql");
        if (_equalsIgnoreCase_1) {
          _matched=true;
          this.postGreSqlGenerator.doGenerate(resource, fsa, context);
        }
      }
      if (!_matched) {
        boolean _equalsIgnoreCase_2 = modeloER.getTargetGenerator().toString().equalsIgnoreCase("mysql");
        if (_equalsIgnoreCase_2) {
          _matched=true;
          this.MySqlGenerator.doGenerate(resource, fsa, context);
        }
      }
    } else {
      this.htmlGenerator.doGenerate(resource, fsa, context);
      this.postGreSqlGenerator.doGenerate(resource, fsa, context);
      this.MySqlGenerator.doGenerate(resource, fsa, context);
      this.PlantUmlGenerator.doGenerate(resource, fsa, context);
    }
  }
}
