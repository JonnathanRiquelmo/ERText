/*
 * generated by Xtext 2.17.0
 */
package org.xtext.unipampa.erdsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.unipampa.erdsl.erDsl.ERModel
import javax.swing.plaf.SeparatorUI

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class ErDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
val modeloER = resource.contents.get(0) as ERModel
		fsa.generateFile('LogicalSchema.txt', 
			'''
			================================================
			DATABASE «modeloER.domain.name»
			================================================
			
			================================================
			Tables
			================================================
				«FOR entity : modeloER.entities SEPARATOR ','»
				«entity.name» is a? «FOR parent : entity.isA SEPARATOR ','»«parent.name»«ENDFOR»
						«FOR attribute : entity.attributes SEPARATOR ','»
						attribute: «attribute.name» «attribute.type» is a key? «attribute.isIsKey»
						«ENDFOR»
				«ENDFOR»				
			================================================
			Relations
			================================================
				«FOR relation : modeloER.relations SEPARATOR ','»
					«relation.name»	
				«ENDFOR»
			'''
		)
		println('OLA MUNDO!');
		
	}
}
